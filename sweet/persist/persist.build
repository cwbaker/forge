
buildfile "persist_examples/persist_examples.build";
buildfile "persist_test/persist_test.build";

Library {
    id = "persist";

    libraries = {
        "assert/assert",
        "error/error",
        "path/path",
        "rtti/rtti"
    };

    Cc {
        pch = "stdafx.hpp";
        "Address.cpp",
        "Archive.cpp",
        "Attribute.cpp",
        "BinaryReader.cpp",
        "BinaryWriter.cpp",
        "Context.cpp",
        "Element.cpp",
        "EnumFilter.cpp",
        "Error.cpp",
        "JsonParser.cpp",
        "JsonReader.cpp",
        "JsonWriter.cpp",
        "LuaParser.cpp",
        "LuaReader.cpp",
        "LuaWriter.cpp",
        "MaskFilter.cpp",
        "narrow.cpp",
        "PathFilter.cpp",
        "Reference.cpp",
        "Resolver.cpp",
        "strnlen.cpp",
        "TextReader.cpp",
        "TextWriter.cpp",
        "Ucs2CharFilter.cpp",
        "widen.cpp",
        "XmlParser.cpp",
        "XmlReader.cpp",
        "XmlWriter.cpp"
    };

    Parser {
        "json_parser.g",
        "lua_parser.g",
        "xml_parser.g"
    };
}
