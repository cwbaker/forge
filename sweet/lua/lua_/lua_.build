
Library {
    id = "liblua";

    libraries = {
        "assert/assert";
        "error/error";
    };
        
    Source {
        defines = { "_CRT_SECURE_NO_DEPRECATE" };
        "lapi.c",
        "lcode.c",
        "ldebug.c",
        "ldo.c",
        "ldump.c",
        "lfunc.c",
        "lgc.c",
        "llex.c",
        "lmem.c",
        "lobject.c",
        "lopcodes.c",
        "lparser.c",
        "lstate.c",
        "lstring.c",
        "ltable.c",
        "ltm.c",
        "lundump.c",
        "lvm.c",
        "lzio.c",
        "lauxlib.c",
        "lbaselib.c",
        "ldblib.c",
        "liolib.c",
        "lmathlib.c",
        "loslib.c",
        "ltablib.c",
        "lstrlib.c",
        "loadlib.c",
        "linit.c", 
    };
}

Executable {
    id = "luac";    
    
    settings = {
        variants = { "debug", "release", "shipping" };
    };
        
    libraries = {
        "assert/assert",
        "lua/lua_/liblua"
    };
    
    Source {
        defines = { "_CRT_SECURE_NO_DEPRECATE" };
        "luac.c",
        "print.c"
    };
}

Executable {
    id = "lua";
    project_name = "lua_";
    
    settings = {
        variants = { "debug", "release", "shipping" };
    };
    
    libraries = {
        "assert/assert",
        "lua/lua_/liblua"
    };
    
    Source {
        defines = { "_CRT_SECURE_NO_DEPRECATE" };
        "lua.c",
    };
}
