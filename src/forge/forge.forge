
require 'forge.CopyDirectory';

buildfile 'forge/forge.forge';
buildfile 'forge_hooks/forge_hooks.forge';
buildfile 'forge_lua/forge_lua.forge';
buildfile 'forge_test/forge_test.forge';

for _, forge in forge:default_builds("cc_.*") do
    local settings =  {
        defines = {
            "_CRT_SECURE_NO_DEPRECATE", -- Disable CRT security warnings
            "_SCL_SECURE_NO_DEPRECATE", -- Disable SCL security warnings
            "_WIN32_WINNT=0x0a00", -- Target Windows 10
            "WIN32_LEAN_AND_MEAN" -- Include minimumal declarations from Windows headers
        };
    };

    -- Disable warnings on Linux to avoid unused variable warnings in Boost
    -- System library headers.
    if forge:operating_system() == "linux" then
        settings.warning_level = 0;
    end

    local forge = forge:configure( settings );
    forge:Library '${lib}/forge_${architecture}' {
        forge:Cxx '${obj}/%1' {
            -- Disable automatic linking to Boost libraries.
            defines = { "BOOST_ALL_NO_LIB" };
            "Arguments.cpp",
            "Context.cpp",
            "Executor.cpp",
            "Filter.cpp",
            "Forge.cpp",
            "ForgeEventSink.cpp",
            "Graph.cpp",
            "GraphReader.cpp",
            "GraphWriter.cpp",
            "Job.cpp",
            "Reader.cpp", 
            "Scheduler.cpp", 
            "System.cpp",
            "Target.cpp",
            "TargetPrototype.cpp",
            "path_functions.cpp"
        };
    };
end
